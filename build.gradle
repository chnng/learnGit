// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        compile_sdk_version = 27
        build_tools_version = '28.0.1'
        min_sdk_version = 19
        target_sdk_version = 27

        kotlin_version = '1.2.51'
        support_version = '27.1.1'
        lifecycle_version = '2.0.0-beta01'
        room_version = '2.0.0-beta01'
        paging_version = '2.0.0-beta01'
        nav_version = '1.0.0-alpha03'
        work_version = '1.0.0-alpha04'
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
//        println rootProject.ext.versions.kotlin_version
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0-alpha01"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    configurations.all {
        resolutionStrategy {
            force "com.android.support:appcompat-v7:$support_version"
            force "com.android.support:support-v4:$support_version"
        }
    }
    //  exclude group: "com.android.support"
//    configurations.all {
//        exclude group: 'com.android.support'/*, module: 'support-v13'*/
//    }
}

//configurations.all {
//    resolutionStrategy {
//        force "com.android.support:appcompat-v7:$support_version"
//        force "com.android.support:support-v4:$support_version"
//    }
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// https://developer.android.com/topic/libraries/architecture/adding-components
//    /********************** ViewModel and LiveData **********************/
//
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    // alternatively - just ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
//    // use -ktx for Kotlin
//    // alternatively - just LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
//    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
//    //     AndroidX libraries use this lightweight import for Lifecycle
//    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
//    // use -ktx for Kotlin
//
//    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
//    /******************** ViewModel and LiveData End ********************/
//
//    /******************************* Room *******************************/
//
//    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
//
//    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
//
//    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"
//
//    // Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"
//    /***************************** Room End *****************************/
//
//    /****************************** Paging ******************************/
//
//    implementation "androidx.paging:paging-runtime:$paging_version"
//
//    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version"
//
//    // optional - RxJava support
//    implementation "androidx.paging:paging-rxjava2:$paging_version"
//    /**************************** Paging End ****************************/
//
//    /**************************** Navigation ****************************/
//
//    implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
//    implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin
//
//    // optional - Test helpers
//    androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
//    // use -ktx for Kotlin
//    /************************** Navigation End **************************/
//
//    /*************************** WorkManager ***************************/
//
//    implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin
//
//    // optional - Firebase JobDispatcher support
//    implementation "android.arch.work:work-firebase:$work_version"
//
//    // optional - Test helpers
//    androidTestImplementation "android.arch.work:work-testing:$work_version"
//    /************************* WorkManager End *************************/
