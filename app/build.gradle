apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.learn.git"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    signingConfigs {
        config {
            keyAlias 'chnng'
            keyPassword '123456'
            storeFile file('chnng_key_store.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    //    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:support-annotations:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation project(':okhttp')
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    //    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    //    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    //    implementation 'org.xutils:xutils:3.5.0'
    //    implementation 'jp.wasabeef:glide-transformations:3.1.1'
    // If you want to use the GPU Filters
    //    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'

    // https://developer.android.com/topic/libraries/architecture/adding-components
//    /********************** ViewModel and LiveData **********************/
//    def lifecycle_version = "2.0.0-alpha1"
//
////    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    // alternatively - just ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
//    // use -ktx for Kotlin
//    // alternatively - just LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
//    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
//    //     AndroidX libraries use this lightweight import for Lifecycle
//    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
//    // use -ktx for Kotlin
//
//    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
//    /******************** ViewModel and LiveData End ********************/
//
//    /******************************* Room *******************************/
//    def room_version = "2.0.0-alpha1"
//
//    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
//
//    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
//
//    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"
//
//    // Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"
//    /***************************** Room End *****************************/
//
//    /****************************** Paging ******************************/
//    def paging_version = "2.0.0-alpha1"
//
//    implementation "androidx.paging:paging-runtime:$paging_version"
//
//    // alternatively - without Android dependencies for testing
//    testImplementation "androidx.paging:paging-common:$paging_version"
//
//    // optional - RxJava support
//    implementation "androidx.paging:paging-rxjava2:$paging_version"
//    /**************************** Paging End ****************************/
//
//    /**************************** Navigation ****************************/
//    def nav_version = "1.0.0-alpha01"
//
//    implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
//    implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin
//
//    // optional - Test helpers
//    androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
//    // use -ktx for Kotlin
//    /************************** Navigation End **************************/
//
//    /*************************** WorkManager ***************************/
//    def work_version = "1.0.0-alpha02"
//
//    implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin
//
//    // optional - Firebase JobDispatcher support
//    implementation "android.arch.work:work-firebase:$work_version"
//
//    // optional - Test helpers
//    androidTestImplementation "android.arch.work:work-testing:$work_version"
//    /************************* WorkManager End *************************/
}
